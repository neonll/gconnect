name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    - name: Lint with flake8
      run: |
        cd backend
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    - name: Format check with black
      run: |
        cd backend
        black --check .
    - name: Test with pytest
      run: |
        cd backend
        pytest
    - name: Security check with pip-audit
      run: |
        cd backend
        pip-audit

  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    - name: Lint with ESLint
      run: |
        cd frontend
        npm run lint
    - name: Test with Jest
      run: |
        cd frontend
        npm test -- --passWithNoTests

  build:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
    - uses: actions/checkout@v3
    - name: Build Docker images
      run: |
        docker compose build
    - name: Test Docker stack
      run: |
        docker compose up -d
        sleep 10
        curl -f http://localhost:5000/health || echo "API health check failed"
        docker compose down